
import React from 'react'

const ProjectData = [
    {
        id: 1,
        title: "Portfolio-V2",
        subtitle:"July 2023",
        description: "",
        techStack: "",
        image: "Portfolio-v2.webp",
        github: "",
        devpost: "",
        tags: ['ReactJS', 'TailwindCSS', 'Framer-motion'],
    },
    {
        id: 2,
        title: "traCEker",
        subtitle:"June 2023",
        description: "TraCEker is a platform where students can track how often they shower and how well they are doing relative to other users with a monthly leaderboard. Users upload a selfie of them after they shower, which is detected by a classification vision model. Once the selfie is verified as a valid submission, the user is logged as showered. Users can use the calendar view to see how often they showered throughout the days.",
        techStack: "We built traCEker using: React for the frontend website, Python, Firebase, and Flask for the backend, MongoDB to store all our data, Trained Custom Vision using images to detect selfies with Microsoft Azure Custom Vision, Figma to prototype the design",
        image: "traCEker.png",
        github: "",
        devpost: "https://devpost.com/software/traceker",
        tags: ['ReactJS', 'TailwindCSS', 'Firebase', 'MongoDB', 'Python', 'Flask', 'Azure'],
    },
    {
        id: 3,
        title: "FoundAIr",
        subtitle:"February 2023",
        description: "FoundAIr is an AI-powered business plan generator! Say goodbye to the stress and frustration of writing a business plan from scratch. All you need is your business idea and a few clicks of a button. Simply enter your idea into the webpage, as well as your name, your budget, and your proposed business name, and the AI will take care of the rest.",
        techStack: "We used Tailwind CSS and React to create the front-end consisting of a landing page and a Typeform. To integrate this with the back end, we used an AWS Lambda function where we called upon the OpenAI API to generate text for the business plan. We formatted a PDF file using the fPDF library and returned it to the user using IPFS peer-to-peer technology.",
        image: "FoundAIr.png",
        github: "",
        devpost: "https://devpost.com/software/foundair",
        tags: ['ReactJS', 'TailwindCSS', 'Framer-motion', 'Python', 'AWS', 'IPFS'],
    },
    {
        id:4,
        title: "Certuary",
        subtitle:"January 2023",
        description: "Our project was a blockchain-based certificate verification system that was built using IPFS and Estuary. The main goal of the project was to create a secure and tamper-proof way for individuals and organizations to verify the authenticity of certificates",
        techStack: "On the frontend, we used React and Tailwind to build the user interface for our website. On the backend, we used Python and Flask to build the server-side logic and host our website. Estuary provided a decentralized and immutable platform to store and verify the certificates and IPFS was used to create a unique hash of the certificate which was then added to the Estuary blockchain as a new block.",
        image: "Certuary.png",
        github: "",
        devpost: "https://devpost.com/software/certuary",
        tags: ['ReactJS', 'TailwindCSS', 'Framer-motion', 'Python', 'Flask'],
    },
    {
        id: 5,
        title: "Portfolio-V1",
        subtitle:"January 2023",
        description: "",
        techStack: "",
        image: "Portfolio-v1.jpeg",
        github: "",
        devpost: "",
        tags: ['ReactJS', 'TailwindCSS', 'Framer-motion'],
    },
    {
        id: 6,
        title: "DSA Time Complexity Analysis",
        subtitle:"January 2023",
        description: "",
        techStack: "",
        image: "DSAAnalysis.png",
        github: "",
        devpost: "",
        tags: ['Python'],
    },
    {
        id: 7,
        title: "Hop Queen",
        subtitle:"December 2022",
        description: "",
        techStack: "",
        image: "HopQueen.png",
        github: "https://github.com/stephen-ics/Hop-Queen",
        devpost: "",
        tags: ['C#', 'Unity'],
    },
    {
        id: 8,
        title: "Emergenchain",
        subtitle:"October 2022",
        description: "Emergenchain offers a secure and organized way to store one's medical records. Additionally, we also offer a certificate for vaccines and immunizations. Finally, we have a QR code that displays the emergency information tab when scanned. This acts as a precaution for when someone is found unconscious.",
        techStack: "We designed our front end using Figma and coded it on React. All of the medical records are stored DeSo blockchain as posts, and all of our certificates are NFTs minted with DeSo. We also used DeSo login, to implement our login. We minted NFTs on Georli testnet.",
        image: "Emergenchain.gif",
        github: "",
        devpost: "https://devpost.com/software/health-hub-hi0tmo",
        tags: ['ReactJS', 'TailwindCSS', 'Framer-motion', 'SolidityJS', 'DeSo'],
    },
    {
        id: 9,
        title: "EN-FT",
        subtitle:"October 2022",
        description: "Our program allows users seeking to help the environment effectively find volunteering opportunities to do so. We also preserve the action through EN-FT's so good deeds are never forgotten!",
        techStack: "We prototyped on Figma and then developed the front end with Velo. We then used javascript and the DeSo Protocol Library to integrate the authentication, posting, and minting on the Wix's Velo.",
        image: "EN-FT.png",
        github: "",
        devpost: "https://devpost.com/software/en-ft",
        tags: ['Javascript', 'DeSo'],
    },
    {
        id: 10,
        title: "Just DAO It!",
        subtitle:"September 2022",
        description: "Just DAO It! Provides a framework for people to easily implement decentralized mutual funds. This allows for people to create their own mutual funds, without having to pay a management fee to the bank.",
        techStack: "The UI/UX was designed with Figma. The front end was built on Next.js, the CSS was implemented with TailwindCSS, while the animations were done with framer-motion. We also used various dependencies such as TradingViewWidget to display the graphs. The Web3 backend was coded in Solidity, Javascript, and Typescript. The mutual funds were built with smart contracts, while proposals are made via DAO proposals",
        image: "JustDaoIt.png",
        github: "",
        devpost: "https://devpost.com/software/just-dao-it",
        tags: ['NextJS', 'TailwindCSS', 'Framer-motion', 'Typescript', 'SolidityJS', 'Axelar'],
    },
    {
        id: 11,
        title: "Siri Model",
        subtitle:"August 2022",
        description: "",
        techStack: "",
        image: "SiriModel.png",
        github: "",
        devpost: "",
        tags: ['Python', 'Tensorflow', 'CV', 'NLP', 'Neural Networks'],
    },
    {
        id: 12,
        title: "tmun.ca",
        subtitle:"August 2022",
        description: "",
        techStack: "",
        image: "tmun.png",
        github: "",
        devpost: "",
        tags: ['HTML5', 'CSS3', 'Javascript', 'Bootstrap', 'SCSS', 'Ruby'],
    },

    {
        id: 13,
        title: "Stock Stalker",
        subtitle:"August 2022",
        description: "Unlike the traditional profit-orientated approach in financial investing, responsible investing is a relatively new concept that expressly recognizes the importance of environmental, social, and governance aspects to the investor and the long-term health and stability of the market",
        techStack: "The prototype was designed with Figma while the front end was built on React. We used Tailwind CSS, framer-motion and various libraries to decorate our web page. The backend data was stored on JSON-Server, cors and axios Â·Notifications are sent out using Twilio. Functionalities were built with tradingviewwidget",
        image: "StockStalker.png",
        github: "https://github.com/stephen-ics/Hack-The-6ix",
        devpost: "https://devpost.com/software/stock-stalker-4jrosz",
        tags: ['ReactJS', 'TailwindCSS', 'Framer-motion', 'Twilio'],
    },
    {
        id: 14,
        title: "PlantUp",
        subtitle:"July 2022",
        description: "At its core, PlantUp is a platform that is meant to make gardening an exciting experience- and we have plenty of features that help realize this.",
        techStack: "At its core, PlantUp is a platform that is meant to make gardening an exciting experience- and we have plenty of features that help realize this.' techStack='We designed the prototype on UI/UX Figma and built the front-end using primarily React.JS, tailwind CSS. We also added framer-motion to sprinkle in a little bit of animations. The data in the back end was stored in JSON databases, and we used HTTPS requests to change the JSON in order to fit our needs We also used Twilio for the messaging component and domain.com for our domain name!",
        image: "PlantUp.png",
        github: "https://github.com/stephen-ics/Backyard-Hacks-3.0",
        devpost: "https://devpost.com/software/plantup",
        tags: ['ReactJS', 'TailwindCSS', 'JSON-Server', 'Twilio'],
    },
    {
        id: 15,
        title: "CodeBro",
        subtitle:"July 2022",
        description: "CodeBro is an offline programming suite that allows users to practice both their web design and competitive problem-solving skills.",
        techStack: "We built our front-end using React.Js, Typescript, Workbox and Tailwind CSS for the styling. As we were making a Progressive Web App (PWA), we made an active effort to not use any external servers and databases in order to make sure that CodeBro could operate offline.",
        image: "CodeBro.png",
        github: "https:google.com",
        devpost: "https://google.com",
        tags: ['ReactJS', 'TailwindCSS', 'Typescript', 'PWA', 'Workbox'],
    },
    {
        id: 16,
        title: "Concerto",
        subtitle:"July 2022",
        description: "Concerto aims to destress the high stress concert buying experience ticket minimize reselling through a standard auctioning system!",
        techStack: "The UI was designed through Figma. The front end was built with React and TailwindCSS, while the pages were routed using Next.js built-in router. Our authentication system was built with firebase auth while the back-end data was stored in firestore and accessed through firebase hooks.",
        image: "Concerto.png",
        github: "",
        devpost: "",
        tags: ['NextJS', 'TailwindCSS', 'Firebase', 'Twilio'],
    },
    {
        id: 17,
        title: "DeSsert",
        subtitle:"June 2022",
        description: "DeSsert is a decentralized recipe sharing site that allow users to browse through traditional to exotic recipes from cultures all over the world.",
        techStack: "The UI was designed through Figma. We then developed the front end with React and TailwindCSS. The pages were routed using Next.js built-in router while the backend features such as creating and liking a post, and minting a recipe into a NFT was achieved through the DeSo protocol library.",
        image: "DeSsert.png",
        github: "",
        devpost: "",
        tags: ["NextJS", "TailwindCSS", 'DeSo'],
    },
    {
        id: 18,
        title: "CloseConnect",
        subtitle:"June 2022",
        description: "CloseConnect pairs you with people who live all over the world. This allows for people to tread out of their region and meet others who live in different worlds and to celebrate their different cultures and backgrounds.'",
        techStack: "We built the majority of the front-end using react.js, html5, and css3, we built the navigational bar with react-router-dom, and created alerts with reactjs-alert. On the other hand, we used firebase for the back-end database and log-in/log-out system.",
        image: "CloseConnect.png",
        github: "",
        devpost: "",
        tags: ["ReactJS", "Firebase"],
    },
    {
        id: 19,
        title: "Tokens For Good",
        subtitle:"June 2022",
        description: "Our project gives people who donate to charity an NFT. This gives people the novelty of possessing limited-time collectables and a sense of pride knowing they supported a good cause, increasing the incentive to donate.",
        techStack: "We designed the UI with Figma and implemented the front end using React.js and Chakra UI. The blockchain was implemented with the DesO utility Library and the login was implemented through DeSo Login",
        image: "TokensForGood.png",
        github: "",
        devpost: "",
        tags: ["ReactJS", "Chakra-ui", "DeSo"],
    },
    {
        id: 20,
        title: "BitBots",
        subtitle:"January 2022",
        description: "Bitbots is a program that uses computer vision and artificial intelligence to convert ASL signs into English text or audio, and vice versa. It takes input from a user who finger-spells letters, and the phrase is then interpreted into text or audio.",
        techStack: "We built Speak Out! using Google Teachable Machine and the interactive dashboard using HTML,CSS,Javascript and Netlify. As we used Teachable it allowed us to concentrate a lot more on the data to train to give out more accurate results!'",
        image: "BitBots.png",
        github: "",
        devpost: "",
        tags: ["HTML5", "CSS3", "Javascript", "OpenCV", "Tensorflow"],
    }
];
  
export default ProjectData

